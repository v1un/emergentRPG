version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: emergentRPG-backend
    ports:
      - "8001:8001"
    environment:
      - MONGO_URL=${MONGO_URL:-mongodb://mongodb:27017/emergentRPG}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - BACKEND_PORT=8001
      - BACKEND_HOST=0.0.0.0
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app/backend
    networks:
      - emergentRPG-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: emergentRPG-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - emergentRPG-network
    restart: unless-stopped

  mongodb:
    image: mongo:7.0
    container_name: emergentRPG-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=emergentRPG
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - emergentRPG-network
    restart: unless-stopped

  # Optional: MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: emergentRPG-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - ME_CONFIG_MONGODB_URL=mongodb://admin:password@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-pass}
    depends_on:
      - mongodb
    networks:
      - emergentRPG-network
    restart: unless-stopped
    profiles: ["dev"]

volumes:
  mongodb_data:

networks:
  emergentRPG-network:
    driver: bridge
